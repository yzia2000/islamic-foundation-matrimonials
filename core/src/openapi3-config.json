{
  "openapi": "3.0.0",
  "info": {
    "title": "Islamic Foundation Matrimonials",
    "description": "API for Islamic Foundation Matrimonials.\n",
    "contact": {
      "email": "yzia2000@gmail.com"
    },
    "license": {
      "name": "MIT License",
      "url": "https://mit-license.org/"
    },
    "version": "1.0.0"
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "auth",
      "description": "Authentication routes",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "data",
      "description": "Data routes"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": ["auth"],
        "summary": "Create user",
        "description": "This can only be done by the logged in user.",
        "operationId": "createUser",
        "requestBody": {
          "$ref": "#/components/requestBodies/User"
        },
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/auth/login": {
      "get": {
        "tags": ["auth"],
        "summary": "Logs user into the system",
        "operationId": "loginUser",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "The user name for login",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid username/password supplied"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/data": {
      "get": {
        "tags": ["data"],
        "summary": "Gets personal data from database",
        "operationId": "getData",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          },
          "500": {
            "description": "Server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": ["data"],
        "summary": "Set data for user",
        "description": "This can only be done by the logged in user.",
        "operationId": "setData",
        "requestBody": {
          "description": "User object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Biodata"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "required": ["email", "firstname", "gender", "handle", "lastname"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "handle": {
            "type": "string",
            "description": "Handle of the user"
          },
          "email": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "gender": {
            "type": "string",
            "enum": ["Male", "Female"]
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Education": {
        "required": ["institution", "level"],
        "type": "object",
        "properties": {
          "level": {
            "type": "string",
            "enum": ["Primary", "Secondary", "Undergraduate", "Postgraduate"]
          },
          "institution": {
            "type": "string"
          },
          "major": {
            "type": "string"
          },
          "subjects": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "awards": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "from_date": {
            "type": "string",
            "format": "date",
            "example": "1-1-2021"
          },
          "to_date": {
            "type": "string",
            "format": "date",
            "example": "1-1-2022"
          }
        },
        "xml": {
          "name": "Education"
        }
      },
      "Religion": {
        "required": ["school"],
        "type": "object",
        "properties": {
          "school": {
            "type": "string",
            "enum": ["Hanafi", "Shafei", "Hanbali", "Maliki", "Other"]
          }
        },
        "xml": {
          "name": "Religion"
        }
      },
      "Employment": {
        "required": ["company", "role"],
        "type": "object",
        "properties": {
          "role": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Employment"
        }
      },
      "Contact": {
        "required": ["country", "state", "city"],
        "type": "object",
        "properties": {
          "country": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "Biodata": {
        "type": "object",
        "properties": {
          "gender": {
            "type": "string",
            "enum": ["Male", "Female"]
          },
          "educationHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Education"
            }
          },
          "employmentHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Employment"
            }
          },
          "contact": {
            "$ref": "#/components/schemas/Contact"
          },
          "religion": {
            "$ref": "#/components/schemas/Religion"
          },
          "description": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Biodata"
        }
      }
    },
    "requestBodies": {
      "User": {
        "description": "User object",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "firstname": {
                  "type": "string"
                },
                "lastname": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "handle": {
                  "type": "string"
                },
                "gender": {
                  "type": "string",
                  "enum": ["Male", "Female"]
                }
              }
            }
          }
        },
        "required": false
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
